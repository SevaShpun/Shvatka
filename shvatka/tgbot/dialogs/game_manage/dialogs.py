from aiogram import F
from aiogram_dialog import Dialog, Window
from aiogram_dialog.widgets.input import MessageInput
from aiogram_dialog.widgets.kbd import (
    ScrollingGroup,
    Select,
    SwitchTo,
    Button,
    Calendar,
    Cancel,
    Start,
)
from aiogram_dialog.widgets.text import Const, Format, Case, Jinja

from shvatka.tgbot import states
from .getters import (
    get_my_games,
    get_game,
    get_game_time,
    get_game_datetime,
    get_games,
    get_completed_game,
)
from .handlers import (
    select_my_game,
    start_waivers,
    select_date,
    process_time_message,
    schedule_game,
    show_scn,
    start_schedule_game,
    show_zip_scn,
    show_game_orgs,
    cancel_scheduled_game,
    rename_game_handler,
    publish_game,
    select_game,
    show_my_game_orgs,
    show_my_zip_scn,
)
from ..preview_data import PREVIEW_GAME

games = Dialog(
    Window(
        Const("–°–ø–∏—Å–æ–∫ –ø—Ä–æ—à–µ–¥—à–∏—Ö"),
        Cancel(Const("üîô–ù–∞–∑–∞–¥")),
        ScrollingGroup(
            Select(
                Format("{item.name}"),
                id="games",
                item_id_getter=lambda x: x.id,
                items="games",
                on_click=select_game,
            ),
            id="games_sg",
            width=1,
            height=10,
        ),
        state=states.CompletedGamesPanelSG.list,
        preview_data={"games": [PREVIEW_GAME]},
        getter=get_games,
    ),
    Window(
        Jinja(
            "–í—ã–±—Ä–∞–Ω–∞ –∏–≥—Ä–∞: <b>{{game.name}}</b> —Å ID {{game.id}}\n"
            "–∫–æ—Ç–æ—Ä–∞—è –Ω–∞—á–∞–ª–∞—Å—å: {{ game.start_at|user_timezone }} "
        ),
        SwitchTo(
            Const("‚§¥–ù–∞–∑–∞–¥ –∫ —Å–ø–∏—Å–∫—É –∏–≥—Ä"),
            id="to_my_games",
            state=states.CompletedGamesPanelSG.list,
        ),
        Button(
            Const("üë•–û—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä—ã"),
            id="game_orgs",
            on_click=show_game_orgs,
        ),
        Button(
            Const("üì¶zip-—Å—Ü–µ–Ω–∞—Ä–∏–π"),
            id="game_zip_scn",
            on_click=show_zip_scn,
        ),
        state=states.CompletedGamesPanelSG.game,
        preview_data={"game": PREVIEW_GAME},
        getter=get_completed_game,
    ),
)

my_games = Dialog(
    Window(
        Const("–°–ø–∏—Å–æ–∫ –∏–≥—Ä —Ç–≤–æ–µ–≥–æ –∞–≤—Ç–æ—Ä—Å—Ç–≤–∞"),
        Cancel(Const("üîô–ù–∞–∑–∞–¥")),
        Start(Const("‚úç–ù–∞–ø–∏—Å–∞—Ç—å –∏–≥—Ä—É"), id="write_game", state=states.GameWriteSG.game_name),
        Start(Const("‚úç–ù–∞–ø–∏—Å–∞—Ç—å —É—Ä–æ–≤–µ–Ω—å"), id="write_level", state=states.LevelSG.level_id),
        ScrollingGroup(
            Select(
                Format("{item.name}"),
                id="my_games",
                item_id_getter=lambda x: x.id,
                items="games",
                on_click=select_my_game,
            ),
            id="my_games_sg",
            width=1,
            height=10,
        ),
        state=states.MyGamesPanelSG.choose_game,
        preview_data={"games": [PREVIEW_GAME]},
        getter=get_my_games,
    ),
    Window(
        Jinja(
            "–í—ã–±—Ä–∞–Ω–∞ –∏–≥—Ä–∞: <b>{{game.name}}</b> —Å ID {{game.id}}\n"
            "–¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å: <b>{{game.status}}</b>\n"
            "–î–∞—Ç–∞ –∏ –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞: {% if game.start_at %} "
            "{{ game.start_at|user_timezone }} "
            "{% else %} "
            "–Ω–µ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∞"
            "{% endif %}"
        ),
        SwitchTo(
            Const("‚§¥–ù–∞–∑–∞–¥ –∫ —Å–ø–∏—Å–∫—É –∏–≥—Ä"),
            id="to_my_games",
            state=states.MyGamesPanelSG.choose_game,
        ),
        Button(
            Const("üìú–°—Ü–µ–Ω–∞—Ä–∏–π"),
            id="game_scn",
            on_click=show_scn,
            when=F["game"].can_be_edited,
        ),
        Button(
            Const("üë•–û—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä—ã"),
            id="game_orgs",
            on_click=show_my_game_orgs,
            when=F["game"].can_be_edited,
        ),
        Button(
            Const("üì¶zip-—Å—Ü–µ–Ω–∞—Ä–∏–π"),
            id="game_zip_scn",
            on_click=show_my_zip_scn,
        ),
        SwitchTo(
            Const("‚úè–ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å"),
            id="game_rename",
            state=states.MyGamesPanelSG.rename,
            when=F["game"].can_change_name,
        ),
        Button(
            Const("üìù–ù–∞—á–∞—Ç—å —Å–±–æ—Ä–∫—É –≤–µ–π–≤–µ—Ä–æ–≤"),
            id="start_waiver",
            on_click=start_waivers,
            when=F["game"].can_start_waivers,
        ),
        Button(
            Const("üì®–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å"),
            id="game_publish",
            on_click=publish_game,
            when=F["game"].can_be_publish,
        ),
        Button(
            Const("üìÜ–ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –∏–≥—Ä—É"),
            id="start_schedule_game",
            on_click=start_schedule_game,
            when=F["game"].can_set_start_datetime,
        ),
        Button(
            Const("üì•–û—Ç–º–µ–Ω–∏—Ç—å –∏–≥—Ä—É"),
            id="cancel_scheduled_game",
            on_click=cancel_scheduled_game,
            when=F["game"].start_at & F["game"].can_set_start_datetime,
        ),
        state=states.MyGamesPanelSG.game_menu,
        preview_data={"game": PREVIEW_GAME},
        getter=get_game,
    ),
    Window(
        Jinja("–ß—Ç–æ–±—ã –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞—Ç—å –∏–≥—Ä—É {{game.name}} –ø—Ä–∏—à–ª–∏ –Ω–æ–≤–æ–µ –∏–º—è"),
        MessageInput(func=rename_game_handler),
        SwitchTo(Const("‚§¥–ù–∞–∑–∞–¥"), id="back", state=states.MyGamesPanelSG.game_menu),
        state=states.MyGamesPanelSG.rename,
        getter=get_game,
    ),
)


schedule_game_dialog = Dialog(
    Window(
        Jinja("–í—ã–±–æ—Ä –¥–∞—Ç—ã –Ω–∞—á–∞–ª–∞ –∏–≥—Ä—ã <b>{{game.name}}</b>"),
        Calendar(id="select_game_play_date", on_click=select_date),
        state=states.GameScheduleSG.date,
        preview_data={"game": PREVIEW_GAME},
        getter=get_game,
    ),
    Window(
        Case(
            {
                False: Const("–í–≤–µ–¥–∏—Ç–µ –≤—Ä–µ–º—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ –ß–ß:–ú–ú"),
                True: Jinja(
                    "–ë—É–¥–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ: {{scheduled_time}}. "
                    '–ù–∞–∂–º–∏—Ç–µ "–î–∞–ª–µ–µ", –µ—Å–ª–∏ —É–≤–µ—Ä–µ–Ω—ã, '
                    "–∏–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –¥—Ä—É–≥–æ–µ –≤—Ä–µ–º—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ –ß–ß:–ú–ú –≤–º–µ—Å—Ç–æ —ç—Ç–æ–≥–æ"
                ),
            },
            selector="has_time",
        ),
        MessageInput(func=process_time_message),
        SwitchTo(
            Const("üìÜ–°–æ—Ö—Ä–∞–Ω–∏—Ç—å"),
            id="save_game_schedule",
            state=states.GameScheduleSG.confirm,
            when=lambda data, *args: data["has_time"],
        ),
        getter=get_game_time,
        preview_data={"game": PREVIEW_GAME, "has_time": True},
        state=states.GameScheduleSG.time,
    ),
    Window(
        Jinja(
            "–î–ª—è –∏–≥—Ä—ã <b>{{game.name}}</b> c id {{game.id}} "
            "–±—É–¥–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ –∏–≥—Ä—ã "
            "{{scheduled_datetime|user_timezone}} "
            "–ï—Å–ª–∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–≥—Ä–∞ —Å–∞–º–æ–ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ –Ω–∞—á–Ω—ë—Ç—Å—è –≤ —ç—Ç–æ –≤—Ä–µ–º—è.\n\n"
            "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å?"
        ),
        Button(
            Const("‚úÖ–î–∞"),
            id="save_scheduled_dt",
            on_click=schedule_game,
        ),
        Cancel(Const("‚ùå–û—Ç–º–µ–Ω–∏—Ç—å")),
        getter=get_game_datetime,
        preview_data={"game": PREVIEW_GAME},
        state=states.GameScheduleSG.confirm,
    ),
)
